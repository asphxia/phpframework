<?php

namespace Core\Config;

require_once dirname(__FILE__) . '/../../../core/config/EncoderInterface.php';
require_once dirname(__FILE__) . '/../../../core/config/encoder/IniEncoder.php';
require_once dirname(__FILE__) . '/../../../core/config/Configuration.php';

/**
 * Test class for Configuration.
 * Generated by PHPUnit on 2012-06-09 at 18:24:47.
 */
class ConfigurationTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Configuration
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = Configuration::getInstance();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers {className}::{origMethodName}
     */
    public function testGetInstance() {
        $this->assertTrue($this->object instanceof Configuration);
    }

    /**
     * Tests set the configuration of the class.
     * @covers {className}::{origMethodName}
     */
    public function testSetConfiguration() {
        
        // default data source = null
        $this->assertTrue($this->object->getDataSource() == null);
        
        // Checking the set up of a configuration file
        // valid path
        $configurationfile = dirname(__FILE__) . '/../../../config/localhost.yml'; 
        $this->object->setConfiguration($configurationfile);
        $this->assertTrue($this->object->getDataSource() == $configurationfile);
        
        // invalid path
        $configurationfile = 'path/to/no/fucking.where'; 
        $this->object->setConfiguration($configurationfile);
        $this->assertTrue($this->object->getDataSource() == null);
        
        // Checking the set up of an encoder

        // default encoder = null
        $this->assertTrue($this->object->getEncoder() == null);
        
        // an object
        $encoder = new IniEncoder();
        
        // a valid path
        $configurationfile = dirname(__FILE__) . '/../../../config/localhost.yml'; 
        $this->object->setConfiguration($configurationfile, $encoder);
        
        $this->assertTrue($this->object->getDataSource() == $configurationfile);
        $this->assertTrue($this->object->getEncoder() != null);
        $this->assertTrue($this->object->getEncoder() instanceof EncoderInterface);

    }

    /**
     * @covers {className}::{origMethodName}
     */
    public function testGetConfiguration() {
        // a valid configuration
        $configurationfile = dirname(__FILE__) . '/../../../config/localhost.ini'; 
        $encoder = new IniEncoder();

        $this->object->setConfiguration($configurationfile, $encoder);
        $this->assertTrue($this->object->getDataSource() == $configurationfile);
        $this->assertTrue($this->object->getEncoder() instanceof EncoderInterface);
        
        $data = array('db' => 'host');
        $this->assertTrue('localhost' === $this->object->getConfiguration($data));
        
        $data = array('render' => array('config' => 'extension'));
        $this->assertTrue($this->object->getConfiguration($data) == '.phtml');
        
        $data = array('system' => 'render');
        $struct = array('path' => '/../core/Render.php', 'name' => 'Core\Render');
        $this->assertTrue($this->object->getConfiguration($data) == $struct);
    }

    /**
     * @covers {className}::{origMethodName}
     */
    public function testSetEncoder() {
        $encoder = new IniEncoder();
        $this->object->setEncoder($encoder);
        $this->assertTrue($this->object->getEncoder() !== null);
        $this->assertTrue($this->object->getEncoder() instanceof EncoderInterface);
        
    }

    /**
     * @todo Same as testSetEncoder()
     * @covers {className}::{origMethodName}
     */
    public function testGetEncoder() {
        $encoder = new IniEncoder();
        $this->object->setEncoder($encoder);
        $this->assertTrue($this->object->getEncoder() !== null);
        $this->assertTrue($this->object->getEncoder() instanceof EncoderInterface);
    }

    /**
     * @covers {className}::{origMethodName}
     */
    public function testSetDataSource() {
        $datasrc = dirname(__FILE__) . '/../../../config/localhost.ini';
        $this->object->setDataSource($datasrc);
        $this->assertTrue($datasrc === $this->object->getDataSource());
    }

    /**
     * @todo Same as testSetDataSource()
     * @covers {className}::{origMethodName}
     */
    public function testGetDataSource() {
        $datasrc = dirname(__FILE__) . '/../../../config/localhost.ini';
        $this->object->setDataSource($datasrc);
        $this->assertTrue($datasrc === $this->object->getDataSource());
    }

}

?>
